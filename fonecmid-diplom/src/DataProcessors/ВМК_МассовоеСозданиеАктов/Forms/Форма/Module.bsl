#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Объект.Период.ДатаНачала = НачалоМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(),-1));
	Объект.Период.ДатаОкончания = КонецМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(),-1));	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
				
	Если ЗначениеЗаполнено(Объект.Период) И (Объект.Период.ДатаНачала <> НачалоМесяца(Объект.Период.ДатаНачала)
		Или Объект.Период.ДатаОкончания <> КонецМесяца(Объект.Период.ДатаОкончания)) Тогда 
		
		Объект.Период.ДатаНачала = НачалоМесяца(Объект.Период.ДатаНачала);
		Объект.Период.ДатаОкончания = КонецМесяца(Объект.Период.ДатаОкончания);
		
		ТекстСообщения = СтрШаблон("Период обработки изменен кратно месяцу с %1 по %2",Объект.Период.ДатаНачала, Объект.Период.ДатаОкончания);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"Объект.Период");		

	КонецЕсли;
	
	Объект.ДанныеЗаполнения.Очистить(); 
	
КонецПроцедуры 



#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьДокументы(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Период) Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю("Заполните период создания актов реализации товаров и услуг.
													|Обработка не запущена",,"Объект.Период");
		Возврат;
		
	КонецЕсли; 
	
	// Обпаботка формирует документы только за 1 полный месяц
	Если КонецМесяца(Объект.Период.ДатаНачала) <> КонецМесяца(Объект.Период.ДатаОкончания) Тогда 
		
		ОбщегоНазначенияКлиент.СообщитьПользователю("Период создания актов реализации товаров и услуг должен составлять один полный месяц.
													|Обработка не запущена",,"Объект.Период");
		Возврат;
		
	КонецЕсли;  
	
	
	// Запуск фонового задания на сервере.
	ДлительнаяОперация = СоздатьДокументыНаСервере();
	
	// Подключение обработчика завершения фонового задания.
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.Вставить("ВыводитьСообщения", Истина);
	Оповещение = Новый ОписаниеОповещения("ПолучитьСписокДокументов", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции



&НаСервере
&НаСервере
Функция СоздатьДокументыНаСервере()

    ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
    ПараметрыВыполнения.Вставить("ДатаНачала", Объект.Период.ДатаНачала);
    ПараметрыВыполнения.Вставить("ДатаОкончания", Объект.Период.ДатаОкончания);

    Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "ВМК_МассовоеСозданиеРеализаций.СоздатьРеализации", ПараметрыВыполнения);
КонецФункции


&НаКлиенте
Процедура ПолучитьСписокДокументов(Результат, ДополнительныеПараметры) Экспорт

    Если Результат = Неопределено Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Обработка отменена пользователем.");
        Возврат;
    КонецЕсли;

    Если Результат.Статус = "Ошибка" Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Ошибка при выполнении фоновой операции: " + Результат.ПодробноеПредставлениеОшибки);
        Возврат;
    КонецЕсли;

    РезультатОбработки = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);

    Если РезультатОбработки = Неопределено Или ТипЗнч(РезультатОбработки) <> Тип("Структура") Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Получен неверный результат из временного хранилища.");
        Возврат;
    КонецЕсли;

    Объект.ДанныеЗаполнения.Очистить();

    Если РезультатОбработки.ДокументовСоздано = 0 И РезультатОбработки.ДокументовНеСоздано = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Документы не были созданы. Возможно, они уже существуют.");
        Возврат;
    КонецЕсли;

    ЗаписатьСписокДокументов(РезультатОбработки.МассивДоговоровИРеализаций);

    ТекстСообщения = СтрШаблон("Создано документов: %1, не создано: %2",
        РезультатОбработки.ДокументовСоздано,
        РезультатОбработки.ДокументовНеСоздано);

    ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);


КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьСписокДокументов(МассивСписка); 
	
	Для Каждого Элемент Из МассивСписка Цикл
        Строка = Объект.ДанныеЗаполнения.Добавить();
        Строка.Договоры = Элемент.Договор;
        Строка.Реализация = Элемент.Реализация;
	
	КонецЦикла
	
КонецПроцедуры

#КонецОбласти

