Процедура ОбработкаПроведения(Отказ, Режим)
    
    ФормированиеДвижений();
    Движения.ВМК_ДополнительныеНачисления.Записать();
    Движения.ВМК_Удержания.Записать();
    
    РасчетНДФЛБаза();
    ДвиженияВзаиморасчеты(Ссылка, Дата);
    
КонецПроцедуры

Процедура ФормированиеДвижений()

    Движения.ВМК_ДополнительныеНачисления.Записывать = Истина;
    Для Каждого ТекСтрокаНачисления из Начисления Цикл
        Движение = Движения.ВМК_ДополнительныеНачисления.Добавить();
        Движение.Сторно = Ложь;
        Движение.ВидРасчета = ПланыВидовРасчета.ВМК_ДополнительныеНачисления.ПремияФикс;
        Движение.ПериодРегистрации = ТекСтрокаНачисления.ПериодНачисления;
        Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
        Движение.Результат = ТекСтрокаНачисления.Размер;
        Движение.Специализация = ТекСтрокаНачисления.Специализация;
    КонецЦикла;
    
    УникальныеСотрудники = Новый ТаблицаЗначений;
    УникальныеСотрудники.Колонки.Добавить("Сотрудник");
    УникальныеСотрудники.Колонки.Добавить("Специализация");
    УникальныеСотрудники.Колонки.Добавить("ПериодНачисления");
    
    Для Каждого ТекСтрокаНачисления из Начисления Цикл
        НайденныеСтроки = УникальныеСотрудники.НайтиСтроки(
            Новый Структура("Сотрудник,Специализация,ПериодНачисления", 
                ТекСтрокаНачисления.Сотрудник, 
                ТекСтрокаНачисления.Специализация,
                ТекСтрокаНачисления.ПериодНачисления));
        
        Если НайденныеСтроки.Количество() = 0 Тогда
            НоваяСтрока = УникальныеСотрудники.Добавить();
            НоваяСтрока.Сотрудник = ТекСтрокаНачисления.Сотрудник;
            НоваяСтрока.Специализация = ТекСтрокаНачисления.Специализация;
            НоваяСтрока.ПериодНачисления = ТекСтрокаНачисления.ПериодНачисления;
        КонецЕсли;
    КонецЦикла;
    
    Движения.ВМК_Удержания.Записывать = Истина;
    Для Каждого СтрокаСотрудника Из УникальныеСотрудники Цикл
        ДвижениеУ = Движения.ВМК_Удержания.Добавить();
        ДвижениеУ.Сторно = Ложь;
        ДвижениеУ.ВидРасчета = ПланыВидовРасчета.ВМК_Удержания.НДФЛ;
        ДвижениеУ.ПериодРегистрации = СтрокаСотрудника.ПериодНачисления; 
        ДвижениеУ.БазовыйПериодНачало = НачалоМесяца(СтрокаСотрудника.ПериодНачисления);
        ДвижениеУ.БазовыйПериодКонец = КонецМесяца(СтрокаСотрудника.ПериодНачисления);
        ДвижениеУ.Сотрудник = СтрокаСотрудника.Сотрудник;
        ДвижениеУ.Специализация = СтрокаСотрудника.Специализация;
        ДвижениеУ.Результат = 0; 
    КонецЦикла;
    
КонецПроцедуры    

Процедура РасчетНДФЛБаза()

    ИзмерениеОсн = Новый Массив(2);
    ИзмерениеОсн[0] = "Сотрудник";
    ИзмерениеОсн[1] = "Специализация";
    
    ИзмерениеБаза = Новый Массив(2);
    ИзмерениеБаза[0] = "Сотрудник";
    ИзмерениеБаза[1] = "Специализация";

    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |    База.Сотрудник КАК Сотрудник,
        |    База.Специализация КАК Специализация,
        |    База.НомерСтроки КАК НомерСтроки,
        |    СУММА(База.РезультатБаза) КАК РезультатБаза
        |ИЗ
        |    РегистрРасчета.ВМК_Удержания.БазаВМК_ДополнительныеНачисления(&ИзмерениеОсн, &ИзмерениеБаза, , Регистратор = &Регистратор) КАК База
        |СГРУППИРОВАТЬ ПО
        |    База.Сотрудник,
        |    База.Специализация,
        |    База.НомерСтроки";
    
    Запрос.УстановитьПараметр("ИзмерениеБаза", ИзмерениеБаза);
    Запрос.УстановитьПараметр("ИзмерениеОсн", ИзмерениеОсн);
    Запрос.УстановитьПараметр("Регистратор", Ссылка);
    
    РезультатЗапроса = Запрос.Выполнить();
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        
        НДФЛ = ВыборкаДетальныеЗаписи.РезультатБаза * 13 / 100;

        Движение = Движения.ВМК_Удержания[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
        Движение.Результат = НДФЛ;
        
    КонецЦикла;
    
    Движения.ВМК_Удержания.Записать();
            
КонецПроцедуры

Процедура ДвиженияВзаиморасчеты(Ссылка, Дата)
    
    Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
    |    ВМК_ДополнительныеНачисления.Сотрудник КАК Сотрудник,
    |    СУММА(ВМК_ДополнительныеНачисления.Результат) КАК Результат,
    |    0 КАК Удержание
    |ПОМЕСТИТЬ Удержания
    |ИЗ
    |    РегистрРасчета.ВМК_ДополнительныеНачисления КАК ВМК_ДополнительныеНачисления
    |ГДЕ
    |    ВМК_ДополнительныеНачисления.Регистратор = &Регистратор
    |СГРУППИРОВАТЬ ПО
    |    ВМК_ДополнительныеНачисления.Сотрудник
    |
    |ОБЪЕДИНИТЬ ВСЕ
    |
    |ВЫБРАТЬ
    |    ВМК_Удержания.Сотрудник,
    |    0,
    |    ВМК_Удержания.Результат
    |ИЗ
    |    РегистрРасчета.ВМК_Удержания КАК ВМК_Удержания
    |ГДЕ
    |    ВМК_Удержания.Регистратор = &Регистратор
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |    Удержания.Сотрудник КАК Сотрудник,
    |    СУММА(Удержания.Результат) КАК Результат,
    |    СУММА(Удержания.Удержание) КАК Удержание
    |ИЗ
    |    Удержания КАК Удержания
    |СГРУППИРОВАТЬ ПО
    |    Удержания.Сотрудник";

    Запрос.УстановитьПараметр("Регистратор", Ссылка);
    Результат = Запрос.Выполнить().Выгрузить();

    Для Каждого Строка из Результат Цикл
        Сумма = Строка.Результат - Строка.Удержание;
        Движение = Движения.ВМК_ВзаиморасчетыССотрудниками.Добавить();
        Движение.Период = Дата;
        Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
        Движение.Сотрудник = Строка.Сотрудник;
        Движение.Сумма = Сумма;    
    КонецЦикла;
    Движения.ВМК_ВзаиморасчетыССотрудниками.Записать();
    
КонецПроцедуры
