
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВМК_ВыполнитьАвтозаполнение() Экспорт
	
	Если ПустаяСтрока(Константы.ВМК_НоменклатураАбонентскаяПлата.Получить()) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнено значение абонентской платы";
		Сообщение.Сообщить();	
		Услуги.Очистить();	
		Товары.Очистить();
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Константы.ВМК_НоменклатураРаботыСпециалиста.Получить()) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнено значение работы специалста";
		Сообщение.Сообщить();
		Услуги.Очистить();	
		Товары.Очистить();
		Возврат;
	КонецЕсли;
	
		
	Если Не ЗначениеЗаполнено(Договор.ВМК_СуммаАбонентскойПлаты) Тогда   
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "У данного клиента не указана сумма абонентской платы";
		Сообщение.Сообщить();
		Возврат;
	Иначе
		Услуги.Очистить();
		ТекущаяСтрока = Услуги.Добавить(); 
		
		ТекущаяСтрока.Номенклатура = Константы.ВМК_НоменклатураАбонентскаяПлата.Получить();
		ТекущаяСтрока.Количество = 1;
		ТекущаяСтрока.Сумма = Договор.ВМК_СуммаАбонентскойПлаты;
		ТекущаяСтрока.Цена = Договор.ВМК_СуммаАбонентскойПлаты;
		
		ЗапросРаботы = Новый Запрос;
		ЗапросРаботы.Текст = "ВЫБРАТЬ
		|	ВМК_ВыполненныеКлиентуРаботыОбороты.Клиент КАК Клиент,
		|	ВМК_ВыполненныеКлиентуРаботыОбороты.Договор КАК Договор,
		|	СУММА(ВМК_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовОборот) КАК КоличествоЧасовОборот,
		|	СУММА(ВМК_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот) КАК СуммаКОплатеОборот
		|ИЗ
		|	РегистрНакопления.ВМК_ВыполненныеКлиентуРаботы.Обороты(&НачалоМесяца, &КонецМесяца, , ) КАК ВМК_ВыполненныеКлиентуРаботыОбороты
		|ГДЕ
		|	ВМК_ВыполненныеКлиентуРаботыОбороты.Клиент = &Клиент
		|	И ВМК_ВыполненныеКлиентуРаботыОбороты.Договор = &Договор
		|
		|СГРУППИРОВАТЬ ПО
		|	ВМК_ВыполненныеКлиентуРаботыОбороты.Клиент,
		|	ВМК_ВыполненныеКлиентуРаботыОбороты.Договор" ;
		ЗапросРаботы.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Дата) );
		ЗапросРаботы.УстановитьПараметр("КонецМесяца", КонецМесяца(Дата) );
		ЗапросРаботы.УстановитьПараметр("Клиент", Контрагент);
		ЗапросРаботы.УстановитьПараметр("Договор", Договор);
		ВыборкаРаботы = ЗапросРаботы.Выполнить().Выбрать();
		
		Пока ВыборкаРаботы.Следующий() Цикл
		
		Если ВыборкаРаботы.КоличествоЧасовОборот <> 0 Тогда
			ТекущаяСтрока2 = Услуги.Добавить();
			ТекущаяСтрока2.Номенклатура = Константы.ВМК_НоменклатураРаботыСпециалиста.Получить();
			ТекущаяСтрока2.Количество = ВыборкаРаботы.КоличествоЧасовОборот;
			ТекущаяСтрока2.Сумма = ВыборкаРаботы.СуммаКОплатеОборот;
			ТекущаяСтрока2.Цена = Договор.ВМК_СуммаЧасаРаботы;
		Иначе
			Продолжить;
		КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	

КонецПроцедуры

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;
	
	//+ВМК_ШевкуноваЕ.Ю.
	Движения.ВМК_ВыполненныеКлиентуРаботы.Записывать = Истина;
	НоменклатураРаботыСпециалиста = Константы.ВМК_НоменклатураРаботыСпециалиста.Получить();
	Для Каждого Строка Из Услуги Цикл
		Если Строка.Номенклатура = НоменклатураРаботыСпециалиста Тогда
		Движение = Движения.ВМК_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Клиент = Контрагент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = Строка.Количество;
		Движение.СуммаКОплате = Строка.Сумма
		КонецЕсли;	
	КонецЦикла;
	//-ВМК_ШевкуноваЕ.Ю.
	

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
