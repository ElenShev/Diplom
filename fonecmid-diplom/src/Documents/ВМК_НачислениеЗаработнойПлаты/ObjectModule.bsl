Процедура ОбработкаПроведения(Отказ,Режим)

	ФормированиеДвижений();
	РасчетОкладнойЧасти();
	РасчетОтпуска();
	Движения.ВМК_ОсновныеНачисления.Записать();
	Движения.ВМК_Удержания.Записать();
	РасчетНДФЛ();
	ДвиженияВзаиморасчеты(Ссылка,Дата);
	
 Для Каждого Строка из ОсновныеНачисления Цикл   
	 
    Если Строка.ВидРасчета = ПланыВидовРасчета.ВМК_ОсновныеНачисления.Отпуск Тогда
        КоличествоДней = (НачалоДня(Строка.ДатаОкончания) - НачалоДня(Строка.ДатаНачала))/ (60 * 60 * 24)+1;
        
        МенеджерЗаписи = РегистрыСведений.ВМК_Отпуска.СоздатьМенеджерЗаписи();
        МенеджерЗаписи.Период = НачалоГода(Дата);
        МенеджерЗаписи.Сотрудник = Строка.Сотрудник;
        МенеджерЗаписи.ВидОтпуска = Перечисления.ВМК_ВидОтпуска.Факт;
        МенеджерЗаписи.КоличествоДней = КоличествоДней;
        МенеджерЗаписи.ДатаНачала = Строка.ДатаНачала;
        МенеджерЗаписи.ДатаОкончания = Строка.ДатаОкончания;
        МенеджерЗаписи.Записать();
        
    КонецЕсли;
КонецЦикла;	
КонецПроцедуры


Процедура ФормированиеДвижений()
	
	// регистр ВМК_ОсновныеНачисления

	Для Каждого ТекСтрокаОсновныеНачисления из ОсновныеНачисления Цикл
		Движение = Движения.ВМК_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
		Движение.ПериодДействияНачало = ТекСтрокаОсновныеНачисления.ДатаНачала;
		Движение.ПериодДействияКонец = ТекСтрокаОсновныеНачисления.ДатаОкончания;
		Движение.Сотрудник = ТекСтрокаОсновныеНачисления.Сотрудник;
		Движение.Специализация = ТекСтрокаОсновныеНачисления.Специализация;
		Если ТекСтрокаОсновныеНачисления.ВидРасчета = ПланыВидовРасчета.ВМК_ОсновныеНачисления.ПремияПроцент Тогда
			Движение.Процент = ТекСтрокаОсновныеНачисления.Размер;
			Движение.Результат = ТекСтрокаОсновныеНачисления.Размер;
		ИначеЕсли ТекСтрокаОсновныеНачисления.ВидРасчета = ПланыВидовРасчета.ВМК_ОсновныеНачисления.Оклад Тогда
			Движение.Размер = ТекСтрокаОсновныеНачисления.Размер;
			Движение.Результат = ТекСтрокаОсновныеНачисления.Начислено;
		ИначеЕсли ТекСтрокаОсновныеНачисления.ВидРасчета = ПланыВидовРасчета.ВМК_ОсновныеНачисления.Отпуск Тогда
			Движение.Размер = ТекСтрокаОсновныеНачисления.Размер;
			Движение.Результат = ТекСтрокаОсновныеНачисления.Размер; 
		КонецЕсли;
	КонецЦикла;
	
    УникальныеСотрудники = Новый ТаблицаЗначений;
    УникальныеСотрудники.Колонки.Добавить("Сотрудник");
    УникальныеСотрудники.Колонки.Добавить("Специализация");
    
    Для Каждого ТекСтрокаНачисления из ОсновныеНачисления Цикл
        НайденныеСтроки = УникальныеСотрудники.НайтиСтроки(
            Новый Структура("Сотрудник,Специализация", 
                ТекСтрокаНачисления.Сотрудник, 
                ТекСтрокаНачисления.Специализация));
        
        Если НайденныеСтроки.Количество() = 0 Тогда
            НоваяСтрока = УникальныеСотрудники.Добавить();
            НоваяСтрока.Сотрудник = ТекСтрокаНачисления.Сотрудник;
            НоваяСтрока.Специализация = ТекСтрокаНачисления.Специализация;
        КонецЕсли;
    КонецЦикла;

    Движения.ВМК_Удержания.Записывать = Истина;
    Для Каждого СтрокаСотрудника Из УникальныеСотрудники Цикл
        ДвижениеУ = Движения.ВМК_Удержания.Добавить();
        ДвижениеУ.Сторно = Ложь;
        ДвижениеУ.ВидРасчета = ПланыВидовРасчета.ВМК_Удержания.НДФЛ;
        ДвижениеУ.ПериодРегистрации = Дата; 
        ДвижениеУ.БазовыйПериодНачало = НачалоМесяца(Дата);
        ДвижениеУ.БазовыйПериодКонец = КонецМесяца(Дата);
        ДвижениеУ.Сотрудник = СтрокаСотрудника.Сотрудник;
        ДвижениеУ.Специализация = СтрокаСотрудника.Специализация;
        ДвижениеУ.Результат = 0; 
    КонецЦикла;
    
    Движения.ВМК_ОсновныеНачисления.Записать();    
    Движения.ВМК_Удержания.Записать();
КонецПроцедуры

Процедура РасчетОкладнойЧасти()
	
	ДатаМин = Дата(3000,1,1);
	Для Каждого ТекСтрока из ОсновныеНачисления Цикл
	Если ТекСтрока.ДатаНачала < ДатаМин Тогда
		ДатаМин = ТекСтрока.ДатаНачала;
	КонецЕсли;
	КонецЦикла;

	
	ДатаНачала = НачалоМесяца(ДатаМин);
	ДатаОкончания = КонецМесяца(ДатаМин);
		НормаДней = ПолучитьНормуДней(ДатаНачала, ДатаОкончания);
		
	ТаблицаГрафика = ПолучитьДанныеГрафика(Ссылка, ПланыВидовРасчета.ВМК_ОсновныеНачисления.Оклад);
		
			
	Для Каждого СтрокаГрафика Из ТаблицаГрафика Цикл
    Движение = Движения.ВМК_ОсновныеНачисления[СтрокаГрафика.НомерСтроки - 1];
		
		Отработано = СтрокаГрафика.ЗначениеФактическийПериодДействия;
		
		
		Если НормаДней > 0 Тогда
	
		Движение.Результат = Движение.Размер*(Отработано / НормаДней);
		Иначе 
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнен график работы";
			Сообщение.Сообщить();
			Возврат;
			КонецЕсли;
	КонецЦикла;
	Движения.ВМК_ОсновныеНачисления.Записать();	
	
КонецПроцедуры

Процедура РасчетОтпуска()
	ДатаМин = Дата(3000,1,1);
	Для Каждого ТекСтрока из ОсновныеНачисления Цикл
	Если ТекСтрока.ДатаНачала < ДатаМин Тогда
		ДатаМин = ТекСтрока.ДатаНачала;
		Сотрудник = ТекСтрока.Сотрудник;
		ДнейОтпуска = (НачалоДня(ТекСтрока.ДатаОкончания) - НачалоДня(ТекСтрока.ДатаНачала))/ (60 * 60 * 24);
	КонецЕсли;
	КонецЦикла;
	ДатаНачала = ДобавитьМесяц(ДатаМин, -12);
	ДатаКонец = ДатаМин -1;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
|	СУММА(ВМК_ОсновныеНачисления.Результат) КАК Результат1,
|	ВМК_ОсновныеНачисления.Сотрудник КАК Сотрудник
|ПОМЕСТИТЬ Регистры
|ИЗ
|	РегистрРасчета.ВМК_ОсновныеНачисления КАК ВМК_ОсновныеНачисления
|ГДЕ
|	ВМК_ОсновныеНачисления.ПериодРегистрации МЕЖДУ &ДатаНачала И &ДатаКонец
|	И ВМК_ОсновныеНачисления.Сотрудник = &Сотрудник
|
|СГРУППИРОВАТЬ ПО
|	ВМК_ОсновныеНачисления.Сотрудник
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ
|	СУММА(ВМК_ДополнительныеНачисления.Результат),
|	ВМК_ДополнительныеНачисления.Сотрудник
|ИЗ
|	РегистрРасчета.ВМК_ДополнительныеНачисления КАК ВМК_ДополнительныеНачисления
|ГДЕ
|	ВМК_ДополнительныеНачисления.ПериодРегистрации МЕЖДУ &ДатаНачала И &ДатаКонец
|	И ВМК_ДополнительныеНачисления.Сотрудник = &Сотрудник
|
|СГРУППИРОВАТЬ ПО
|	ВМК_ДополнительныеНачисления.Сотрудник
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	СУММА(Регистры.Результат1) КАК ОбщаяСуммаНачислений,
|	Регистры.Сотрудник КАК Сотрудник
|ИЗ
|	Регистры КАК Регистры
|ГДЕ
|	Регистры.Сотрудник = &Сотрудник
|
|СГРУППИРОВАТЬ ПО
|	Регистры.Сотрудник";
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник );
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКонец", ДатаКонец);

	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ДнейЗаГод = ПолучитьНормуДней(ДатаНачала, ДатаКонец);
	
	ТаблицаГрафика = ПолучитьДанныеГрафика(Ссылка, ПланыВидовРасчета.ВМК_ОсновныеНачисления.Отпуск);
		
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл		
	Для Каждого СтрокаГрафика Из ТаблицаГрафика Цикл
    Движение = Движения.ВМК_ОсновныеНачисления[СтрокаГрафика.НомерСтроки - 1];
		

		Если ДнейЗаГод > 0 Тогда
	
		Движение.Результат = ВыборкаДетальныеЗаписи.ОбщаяСуммаНачислений/ДнейЗаГод*ДнейОтпуска;
		Движение.Размер = Движение.Результат;
		Иначе 
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнен график работы";
			Сообщение.Сообщить();
			Возврат;
			КонецЕсли;
	КонецЦикла;
	КонецЦикла;
	Движения.ВМК_ОсновныеНачисления.Записать();	
	
КонецПроцедуры

Функция ПолучитьНормуДней(ДатаНачала, ДатаОкончания)



	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ВМК_ГрафикРаботы.Значение) КАК Значение
	|ИЗ
	|	РегистрСведений.ВМК_ГрафикРаботы КАК ВМК_ГрафикРаботы	
	|ГДЕ
	|	ВМК_ГрафикРаботы.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ВМК_ГрафикРаботы.Значение = 1";

	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);

	Результат = Запрос.Выполнить().Выбрать();

	Если Результат.Следующий() Тогда
		Возврат Результат.Значение;
	Иначе
		Возврат 0;
	КонецЕсли;

КонецФункции

Функция ПолучитьДанныеГрафика(Регистратор, ВидРасчета) 

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеГрафика.НомерСтроки,
	|	ДанныеГрафика.ЗначениеФактическийПериодДействия
	|ИЗ
	|	РегистрРасчета.ВМК_ОсновныеНачисления.ДанныеГрафика(
	|		Регистратор = &Регистратор
	|		И ВидРасчета = &ВидРасчета
	|	) КАК ДанныеГрафика";

	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.УстановитьПараметр("ВидРасчета", ВидРасчета);
	Результат = Запрос.Выполнить();
	Таблица = Результат.Выгрузить();
	
	Возврат Таблица;

КонецФункции


Процедура РасчетНДФЛ()
	ИзмерениеОсн = Новый Массив(2);
	ИзмерениеОсн[0] = "Сотрудник";
	ИзмерениеОсн[1] = "Специализация";
	
	ИзмерениеБаза = Новый Массив(2);
	ИзмерениеБаза[0] = "Сотрудник";
	ИзмерениеБаза[1] = "Специализация";
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВМК_УдержанияБазаВМК_ОсновныеНачисления.Сотрудник,
		|	ВМК_УдержанияБазаВМК_ОсновныеНачисления.Специализация,
		|	СУММА(ВМК_УдержанияБазаВМК_ОсновныеНачисления.РезультатБаза) КАК РезультатБаза
		|ИЗ
		|	РегистрРасчета.ВМК_Удержания.БазаВМК_ОсновныеНачисления(&ИзмерениеОсн, &ИзмерениеБаза,, Регистратор = &Ссылка) КАК
		|		ВМК_УдержанияБазаВМК_ОсновныеНачисления
		|СГРУППИРОВАТЬ ПО
		|	ВМК_УдержанияБазаВМК_ОсновныеНачисления.Сотрудник,
		|	ВМК_УдержанияБазаВМК_ОсновныеНачисления.Специализация";
	
	Запрос.УстановитьПараметр("ИзмерениеОсн", ИзмерениеОсн);
	Запрос.УстановитьПараметр("ИзмерениеБаза", ИзмерениеБаза);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
  	Движения.ВМК_Удержания.Очистить();
    
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        
        НДФЛ = ВыборкаДетальныеЗаписи.РезультатБаза * 13 / 100;
        
        ДвижениеУ = Движения.ВМК_Удержания.Добавить();
        ДвижениеУ.Сторно = Ложь;
        ДвижениеУ.ВидРасчета = ПланыВидовРасчета.ВМК_Удержания.НДФЛ;
        ДвижениеУ.ПериодРегистрации = Дата; 
        ДвижениеУ.БазовыйПериодНачало = НачалоМесяца(Дата);
        ДвижениеУ.БазовыйПериодКонец = КонецМесяца(Дата);
        ДвижениеУ.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
        ДвижениеУ.Специализация = ВыборкаДетальныеЗаписи.Специализация;
        ДвижениеУ.Результат = НДФЛ;	
	КонецЦикла;
	
	Движения.ВМК_Удержания.Записать();
	
КонецПроцедуры

Процедура ДвиженияВзаиморасчеты(Ссылка,Дата)
	
	ЗАпрос = Новый Запрос;
	ЗАпрос.Текст = "ВЫБРАТЬ
	|	ВМК_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	СУММА(ВМК_ОсновныеНачисления.Результат) КАК Результат,
	|	0 КАК Удержание
	|ПОМЕСТИТЬ Удержания
	|ИЗ
	|	РегистрРасчета.ВМК_ОсновныеНачисления КАК ВМК_ОсновныеНачисления
	|ГДЕ
	|	ВМК_ОсновныеНачисления.Регистратор = &Регистратор
	|СГРУППИРОВАТЬ ПО
	|	ВМК_ОсновныеНачисления.Сотрудник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВМК_Удержания.Сотрудник,
	|	0,
	|	ВМК_Удержания.Результат
	|ИЗ
	|	РегистрРасчета.ВМК_Удержания КАК ВМК_Удержания
	|ГДЕ
	|	ВМК_Удержания.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Удержания.Сотрудник КАК Сотрудник,
	|	СУММА(Удержания.Результат) КАК Результат,
	|	СУММА(Удержания.Удержание) КАК Удержание
	|ИЗ
	|	Удержания КАК Удержания
	|СГРУППИРОВАТЬ ПО
	|	Удержания.Сотрудник";

ЗАпрос.УстановитьПараметр("Регистратор", Ссылка );
Результат = ЗАпрос.Выполнить().Выгрузить();

	Для Каждого Строка из Результат Цикл
		Сумма = Строка.Результат - Строка.Удержание;
		Движение = Движения.ВМК_ВзаиморасчетыССотрудниками.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.Сумма = Сумма;	
	КонецЦикла;
	Движения.ВМК_ВзаиморасчетыССотрудниками.Записать();
	
	
КонецПроцедуры



