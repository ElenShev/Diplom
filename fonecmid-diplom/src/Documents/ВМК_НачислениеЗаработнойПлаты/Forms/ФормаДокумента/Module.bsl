#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти
&НаСервере
Функция ОсновныеНачисленияВидРасчетаПриИзмененииНаСервере(Сотрудник, ВидРасчета, ДатаНачала, ДатаОкончания) ЭКСПОРТ
	
	Если ВидРасчета = ПланыВидовРасчета.ВМК_ОсновныеНачисления.Оклад Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ВМК_УсловияОплатыСотрудниковСрезПоследних.Оклад КАК Оклад
			|ИЗ
			|	РегистрСведений.ВМК_УсловияОплатыСотрудников.СрезПоследних(&ДатаНачала, ) КАК ВМК_УсловияОплатыСотрудниковСрезПоследних
			|ГДЕ
			|	ВМК_УсловияОплатыСотрудниковСрезПоследних.Сотрудник = &Сотрудник";
		
		Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
		Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Возврат ВыборкаДетальныеЗаписи.Оклад;
		Иначе 
			Возврат 0;
		КонецЕсли;
		
	ИначеЕсли ВидРасчета = ПланыВидовРасчета.ВМК_ОсновныеНачисления.ПремияПроцент Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ВМК_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот КАК СуммаКОплатеОборот
			|ИЗ
			|	РегистрНакопления.ВМК_ВыполненныеСотрудникомРаботы.Обороты(&ДатаНачала, &ДатаОкончания,,) КАК
			|		ВМК_ВыполненныеСотрудникомРаботыОбороты
			|ГДЕ
			|	ВМК_ВыполненныеСотрудникомРаботыОбороты.Сотрудник = &Сотрудник";
		
		Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
		Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
		Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Возврат ВыборкаДетальныеЗаписи.СуммаКОплатеОборот;
		Иначе 
			Возврат 0;
		КонецЕсли;
	
		
	КонецЕсли;
	
КонецФункции



#Область ОбработчикиСобытийЭлементовТаблицыФормыОсновныеНачисления
&НаКлиенте
Процедура ОсновныеНачисленияВидРасчетаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ОсновныеНачисления.ТекущиеДанные;
	Размер = ОсновныеНачисленияВидРасчетаПриИзмененииНаСервере(ТекущиеДанные.Сотрудник, ТекущиеДанные.ВидРасчета, ТекущиеДанные.ДатаНачала, ТекущиеДанные.ДатаОкончания);
	
	ТекущиеДанные.Размер = Размер;
КонецПроцедуры


#КонецОбласти




#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

